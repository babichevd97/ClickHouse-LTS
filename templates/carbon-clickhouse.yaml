{{- if .Values.carbon.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Release.Name }}-carbon-deployment"
#   namespace: click-graphite
spec:
  replicas: 3
  selector:
    matchLabels:
      app: carbon-clickhouse
  template:
    metadata:
      labels:
        app: carbon-clickhouse
    spec:
      containers:
        - name: carbon-clickhouse
          image: kazhem/carbon-clickhouse:v0.11.7
          imagePullPolicy: Always
          volumeMounts:
            - name: carbon-conf
              mountPath: "/etc/carbon-clickhouse"
      volumes:
        - name: carbon-conf
          configMap:
            name: "{{ .Release.Name }}-carbon-cm"

---
---
apiVersion: v1
kind: Service
metadata:
  name: "{{ .Release.Name }}-carbon-service"
#   namespace: click-graphite
spec:
  type: NodePort
  selector:
    app: carbon-clickhouse
  ports:
    - name: "2006"
      protocol: TCP
      port: 2006
      targetPort: 2006
      nodePort: {{ .Values.carbon.serverNodePort }}

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: "{{ .Release.Name }}-carbon-cm"
#   namespace: click-graphite
data:
  carbon-clickhouse.conf: | #Carbon ClickHouse simple configuration. More info here:
    [common]
    metric-prefix = "stats.carbon_clickhouse.prom.{host}"
    metric-endpoint = "local"
    max-cpu = 1
    metric-interval = "1m0s"

    [data]
    path = "/data/carbon-clickhouse/"
    compression-level = 0
    chunk-interval = "30s"
    chunk-auto-interval = ""
    compression = "none"

    [upload.graphite]
    type = "points"
    table = "distributed_graphite"
    zero-timestamp = false
    threads = 1
    url = "{{ .Values.carbon.clickhouse.protocol }}://{{ .Values.carbon.clickhouse.user }}:{{ .Values.carbon.clickhouse.pass }}@{{ .Values.carbon.clickhouse.host }}:{{ .Values.carbon.clickhouse.port }}/"
    timeout = "1m0s"
    # [upload.graphite.tls]
    # ca-cert = ["/usr/share/ca-certificates/Yandex/ca-cert"]
    # server-name = "<server-name>"
    # insecure-skip-verify = true # if true, server certificates will not be validated

    [upload.graphite_index]
    type = "index"
    table = "distributed_graphite_index"
    threads = 1
    url =  "{{ .Values.carbon.clickhouse.protocol }}://{{ .Values.carbon.clickhouse.user }}:{{ .Values.carbon.clickhouse.pass }}@{{ .Values.carbon.clickhouse.host }}:{{ .Values.carbon.clickhouse.port }}/"
    timeout = "1m0s"
    cache-ttl = "12h0m0s"
    # [upload.graphite_index.tls]
    # # ca-cert = [ "/usr/share/ca-certificates/Yandex/ca-cert" ]
    # # server-name = "<server-name>"
    # insecure-skip-verify = true # if true, server certificates will not be validated

    [upload.graphite_tagged]
    type = "tagged"
    table = "distributed_graphite_tagged"
    threads = 1
    url = "{{ .Values.carbon.clickhouse.protocol }}://{{ .Values.carbon.clickhouse.user }}:{{ .Values.carbon.clickhouse.pass }}@{{ .Values.carbon.clickhouse.host }}:{{ .Values.carbon.clickhouse.port }}/"
    timeout = "1m0s"
    cache-ttl = "12h0m0s"
    # [upload.graphite_tagged.tls]
    # # ca-cert = [ "/usr/share/ca-certificates/Yandex/ca-cert" ]
    # # server-name = "<server-name>"
    # insecure-skip-verify = true # if true, server certificates will not be validated

    [udp]
    listen = ":2003"
    enabled = false
    log-incomplete = false
    drop-future = "0s"
    drop-past = "0s"

    [tcp]
    listen = ":2003"
    enabled = false
    drop-future = "0s"
    drop-past = "0s"

    [pickle]
    listen = ":2004"
    enabled = false


    [prometheus]
    listen = ":2006"
    enabled = true
    drop-future = "0s"
    drop-past = "0s"

    [logging]
    logger = ""
    file = "stdout"
    level = "debug"
    encoding = "mixed"
    encoding-time = "iso8601"
    encoding-duration = "seconds"

    [convert_to_tagged]
    enabled = false
    separator = ""


---

{{- end}}
